{
  "Route": {
    "prefix": "route",
    "body": [
      "import React from 'react';",
      "import { graphql } from 'relay-runtime';",
      "import Layout from '../common/Layout';",
      "",
      "export default [",
      "  {",
      "    path: '/${1:path}',",
      "    query: graphql`",
      "      query ${TM_DIRECTORY/.*[\\/](.*)$/$1/}${2:Page}Query {",
      "        ...Layout_data",
      "        ...${2:Page}_data",
      "      }",
      "    `,",
      "    components: () => [import(/* webpackChunkName: '${1:path}' */ './${2:Page}')],",
      "    render: ([${2:Page}], data, { config }) => ({",
      "      title: `${3:Title} â€¢ ${config.app.name}`,",
      "      component: (",
      "        <Layout data={data}>",
      "          <${2:Page} data={data} />",
      "        </Layout>",
      "      ),",
      "      chunks: ['${1:path}'],",
      "    }),",
      "  },",
      "];",
      ""
    ],
    "description": "Route"
  },
  "ReactComponent": {
    "prefix": "reactComponent",
    "body": [
      "import clsx from 'clsx';",
      "import React from 'react';",
      "import { makeStyles } from '@material-ui/core/styles';",
      "",
      "const useStyles = makeStyles(theme => ({",
      "  root: {},",
      "}));",
      "",
      "function ${1:Component}(props) {",
      "  const { className, ...other } = props;",
      "  const s = useStyles();",
      "",
      "  return (",
      "    <${2:div} className={clsx(s.root, className)} {...other}>",
      "      ${3:body}$0",
      "    </${2:div}>",
      "  );",
      "}",
      "",
      "export default ${1:Component};",
      ""
    ],
    "description": "React Component"
  },
  "ReactRefComponent": {
    "prefix": "reactRefComponent",
    "body": [
      "import clsx from 'clsx';",
      "import React from 'react';",
      "import { makeStyles } from '@material-ui/core/styles';",
      "",
      "const useStyles = makeStyles(theme => ({",
      "  root: {},",
      "}));",
      "",
      "const ${1:Component} = React.forwardRef(function ${1:Component}(props, ref) {",
      "  const { className, ...other } = props;",
      "  const s = useStyles();",
      "",
      "  return (",
      "    <${2:div} className={clsx(s.root, className)} ref={ref} {...other}>",
      "      ${3:body}$0",
      "    </${2:div}>",
      "  );",
      "});",
      "",
      "export default ${1:Component};",
      ""
    ],
    "description": "React Ref Component"
  },
  "React/Relay Fragment Container": {
    "prefix": "reactFragmentContainer",
    "body": [
      "import clsx from 'clsx';",
      "import React from 'react';",
      "import { makeStyles } from '@material-ui/core/styles';",
      "import { createFragmentContainer, graphql } from 'react-relay';",
      "",
      "const useStyles = makeStyles(theme => ({",
      "  root: {},",
      "}));",
      "",
      "function ${1:Component}(props) {",
      "  const { className, data, ...other } = props;",
      "  const s = useStyles();",
      "",
      "  return (",
      "    <${2:div} className={clsx(s.root, className)} {...other}>",
      "      ${3:body}$0",
      "    </${2:div}>",
      "  );",
      "}",
      "",
      "export default createFragmentContainer(${1:Component}, {",
      "  data: graphql`",
      "    fragment ${1:Component}_data on Query {",
      "      id",
      "    }",
      "  `,",
      "});",
      ""
    ],
    "description": "React/Relay Fragment Container"
  }
}
